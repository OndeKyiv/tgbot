from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, MessageHandler, filters
import asyncio
import nest_asyncio
import pandas as pd
import os

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
TOKEN = '7972722854:AAH30y1KhVey_XkQ_V0Cn8QYxgw-RU8jaF4'

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É Excel
EXCEL_FILE = 'users.xlsx'

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Excel
def add_user_to_excel(user_id, username):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
    if os.path.exists(EXCEL_FILE):
        df = pd.read_excel(EXCEL_FILE)
    else:
        df = pd.DataFrame(columns=['user_id', 'username'])

    # –°–æ–∑–¥–∞–µ–º DataFrame –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    new_user_df = pd.DataFrame({'user_id': [user_id], 'username': [username]})

    # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å—Ç–∞—Ä—ã–π –∏ –Ω–æ–≤—ã–π DataFrame
    df = pd.concat([df, new_user_df], ignore_index=True)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª
    df.to_excel(EXCEL_FILE, index=False)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –°—Ç–≤–æ—Ä—é—î–º–æ –≤–µ–ª–∏–∫—É –∫–Ω–æ–ø–∫—É
    keyboard = [[KeyboardButton('–†–û–ó–ü–û–ß–ê–¢–ò')]]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    
    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –†–û–ó–ü–û–ß–ê–¢–ò",
        reply_markup=reply_markup
    )

# –û–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.text == '–†–û–ó–ü–û–ß–ê–¢–ò':
        # –ü–æ–ª—É—á–∞–µ–º user_id –∏ username
        user_id = update.effective_user.id
        username = update.effective_user.username

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Excel
        add_user_to_excel(user_id, username)

        # URL –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
        image_url = "https://hromada.media/wp-content/uploads/2024/10/brovary.png"
        
        # –ö–Ω–æ–ø–∫–∏ —Å –ø–µ—Ä–µ—Ö–æ–¥–æ–º –Ω–∞ –∫–∞–Ω–∞–ª—ã
        keyboard = [
            [InlineKeyboardButton("–ì–æ–ª–æ—Å –ë—Ä–æ–≤–∞—Ä—Å—å–∫–æ–≥–æ —Ä–∞–π–æ–Ω—É", url="https://t.me/+MR8OR4hhNus3OWQy")],
            [InlineKeyboardButton("–ú–∞—Ä–∞–∑–º–∏ –í–µ–ª–∏–∫–æ–¥–∏–º–µ—Ä—Å—å–∫–æ—ó –≥—Ä–æ–º–∞–¥–∏", url="https://t.me/velykadymerka")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        try:
            await context.bot.send_photo(
                chat_id=update.effective_chat.id,
                photo=image_url,
                caption="""‚ö°Ô∏è –ù–æ–≤–∏–Ω–∏ —Ç–∞ —ñ–Ω—Å–∞–π–¥–∏ –≤—ñ–¥ –≤–ª–∞–¥–∏ –ë—Ä–æ–≤–∞—Ä—â–∏–Ω–∏
üíå –ó–≤'—è–∑–æ–∫ @info_holos
üß≤ –ó–∞–ø—Ä–æ—à–µ–Ω–Ω—è t.me/+MR8OR4hhNus3OWQy""",
                reply_markup=reply_markup
            )
        except Exception as e:
            print(f"Error sending photo: {e}")
            await context.bot.send_message(
                chat_id=update.effective_chat.id,
                text="""‚ö°Ô∏è –ù–æ–≤–∏–Ω–∏ —Ç–∞ —ñ–Ω—Å–∞–π–¥–∏ –≤—ñ–¥ –≤–ª–∞–¥–∏ –ë—Ä–æ–≤–∞—Ä—â–∏–Ω–∏
üíå –ó–≤'—è–∑–æ–∫ @info_holos
üß≤ –ó–∞–ø—Ä–æ—à–µ–Ω–Ω—è t.me/+MR8OR4hhNus3OWQy""",
                reply_markup=reply_markup
            )

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async def main():
    application = ApplicationBuilder().token(TOKEN).build()
    
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, button_handler))
    
    await application.run_polling()

if __name__ == "__main__":
    nest_asyncio.apply()
    asyncio.run(main())
